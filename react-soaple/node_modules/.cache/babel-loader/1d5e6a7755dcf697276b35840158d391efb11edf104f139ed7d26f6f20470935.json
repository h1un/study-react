{"ast":null,"code":"var _jsxFileName = \"/Users/haeun/Documents/GitHub/study-react/src/chapter_06/NotificatiopnList.jsx\";\nimport React from \"react\";\nimport Notification from \"./Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reservedNotifications = [{\n  id: 1,\n  message: \"안녕하세요, 오늘 일정을 알려드립니다.\"\n}, {\n  id: 2,\n  message: \"점심식사 시간입니다.\"\n}, {\n  id: 3,\n  message: \"이제 곧 미팅이 시작됩니다.\"\n}];\nvar timer;\nclass NotificationList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notifications: []\n    };\n  }\n  componentDidMount() {\n    const {\n      notifications\n    } = this.state;\n    timer = setInterval(() => {\n      if (notifications.length < reservedNotifications.length) {\n        const index = notifications.length;\n        notifications.push(reservedNotifications[index]);\n        this.setState({\n          notifications: notifications\n        });\n      } else {\n        this.setState({\n          notifications: []\n        });\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n  componentWillUnmount() {\n    if (timer) {\n      clearInterval(timer);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.notifications.map(notification => {\n        return /*#__PURE__*/_jsxDEV(Notification, {\n          id: notification.id,\n          message: notification.message\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default NotificationList;","map":{"version":3,"names":["React","Notification","jsxDEV","_jsxDEV","reservedNotifications","id","message","timer","NotificationList","Component","constructor","props","state","notifications","componentDidMount","setInterval","length","index","push","setState","clearInterval","componentWillUnmount","render","children","map","notification","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/haeun/Documents/GitHub/study-react/src/chapter_06/NotificatiopnList.jsx"],"sourcesContent":["import React from \"react\";\nimport Notification from \"./Notification\";\n\nconst reservedNotifications = [\n    {\n        id: 1,\n        message: \"안녕하세요, 오늘 일정을 알려드립니다.\",\n    },\n    {\n        id: 2,\n        message: \"점심식사 시간입니다.\",\n    },\n    {\n        id: 3,\n        message: \"이제 곧 미팅이 시작됩니다.\",\n    },\n];\n\nvar timer;\n\nclass NotificationList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            notifications: [],\n        };\n    }\n\n    componentDidMount() {\n        const { notifications } = this.state;\n        timer = setInterval(() => {\n            if (notifications.length < reservedNotifications.length) {\n                const index = notifications.length;\n                notifications.push(reservedNotifications[index]);\n                this.setState({\n                    notifications: notifications,\n                });\n            } else {\n                this.setState({\n                    notifications: [],\n                });\n                clearInterval(timer);\n            }\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        if (timer) {\n            clearInterval(timer);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.notifications.map((notification) => {\n                    return (\n                        <Notification\n                            key={notification.id}\n                            id={notification.id}\n                            message={notification.message}\n                        />\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default NotificationList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,qBAAqB,GAAG,CAC1B;EACIC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE;AACb,CAAC,EACD;EACID,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE;AACb,CAAC,EACD;EACID,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE;AACb,CAAC,CACJ;AAED,IAAIC,KAAK;AAET,MAAMC,gBAAgB,SAASR,KAAK,CAACS,SAAS,CAAC;EAC3CC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,aAAa,EAAE;IACnB,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAChB,MAAM;MAAED;IAAc,CAAC,GAAG,IAAI,CAACD,KAAK;IACpCL,KAAK,GAAGQ,WAAW,CAAC,MAAM;MACtB,IAAIF,aAAa,CAACG,MAAM,GAAGZ,qBAAqB,CAACY,MAAM,EAAE;QACrD,MAAMC,KAAK,GAAGJ,aAAa,CAACG,MAAM;QAClCH,aAAa,CAACK,IAAI,CAACd,qBAAqB,CAACa,KAAK,CAAC,CAAC;QAChD,IAAI,CAACE,QAAQ,CAAC;UACVN,aAAa,EAAEA;QACnB,CAAC,CAAC;MACN,CAAC,MAAM;QACH,IAAI,CAACM,QAAQ,CAAC;UACVN,aAAa,EAAE;QACnB,CAAC,CAAC;QACFO,aAAa,CAACb,KAAK,CAAC;MACxB;IACJ,CAAC,EAAE,IAAI,CAAC;EACZ;EAEAc,oBAAoBA,CAAA,EAAG;IACnB,IAAId,KAAK,EAAE;MACPa,aAAa,CAACb,KAAK,CAAC;IACxB;EACJ;EAEAe,MAAMA,CAAA,EAAG;IACL,oBACInB,OAAA;MAAAoB,QAAA,EACK,IAAI,CAACX,KAAK,CAACC,aAAa,CAACW,GAAG,CAAEC,YAAY,IAAK;QAC5C,oBACItB,OAAA,CAACF,YAAY;UAETI,EAAE,EAAEoB,YAAY,CAACpB,EAAG;UACpBC,OAAO,EAAEmB,YAAY,CAACnB;QAAQ,GAFzBmB,YAAY,CAACpB,EAAE;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGvB,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACJ;AAEA,eAAerB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}