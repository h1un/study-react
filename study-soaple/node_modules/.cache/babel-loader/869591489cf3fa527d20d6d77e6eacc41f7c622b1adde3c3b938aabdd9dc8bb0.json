{"ast":null,"code":"var _jsxFileName = \"/Users/haeun/Documents/GitHub/study-react/src/chapter_12/Calculaator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TemperatureInput from \"./TemperatureInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBB3C\\uC774 \\uB053\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uBB3C\\uC774 \\uB053\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n_c = BoilingVerdict;\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\nfunction Calculator(props) {\n  _s();\n  const [temperature, setTemperature] = useState(\"\");\n  const [scale, setScale] = useState(\"c\");\n  const handleCelsiusChange = temperature => {\n    setTemperature(temperature);\n    setScale(\"c\");\n  };\n  const handleFahrenheitChange = temperature => {\n    setTemperature(temperature);\n    setScale(\"f\");\n  };\n  const celsius = scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n  const fahrenheit = scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"c\",\n      temperature: celsius,\n      onTemperatureChange: handleCelsiusChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"f\",\n      temperature: fahrenheit,\n      onTemperatureChange: handleFahrenheitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n      celsius: parseFloat(celsius)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Calculator, \"igbAbqTLMYxlJ6XBYRROgdrKG7A=\");\n_c2 = Calculator;\nexport default Calculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoilingVerdict\");\n$RefreshReg$(_c2, \"Calculator\");","map":{"version":3,"names":["React","useState","TemperatureInput","jsxDEV","_jsxDEV","BoilingVerdict","props","celsius","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","toCelsius","fahrenheit","toFahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","Calculator","_s","setTemperature","scale","setScale","handleCelsiusChange","handleFahrenheitChange","onTemperatureChange","_c2","$RefreshReg$"],"sources":["/Users/haeun/Documents/GitHub/study-react/src/chapter_12/Calculaator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport TemperatureInput from \"./TemperatureInput\";\nfunction BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n        return <p>물이 끓습니다.</p>;\n    }\n    return <p>물이 끓지 않습니다.</p>;\n}\n\nfunction toCelsius(fahrenheit) {\n    return ((fahrenheit - 32) * 5) / 9;\n}\n\nfunction toFahrenheit(celsius) {\n    return (celsius * 9) / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return \"\";\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}\n\nfunction Calculator(props) {\n    const [temperature, setTemperature] = useState(\"\");\n    const [scale, setScale] = useState(\"c\");\n\n    const handleCelsiusChange = (temperature) => {\n        setTemperature(temperature);\n        setScale(\"c\");\n    };\n\n    const handleFahrenheitChange = (temperature) => {\n        setTemperature(temperature);\n        setScale(\"f\");\n    };\n\n    const celsius =\n        scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit =\n        scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n        <div>\n            <TemperatureInput\n                scale=\"c\"\n                temperature={celsius}\n                onTemperatureChange={handleCelsiusChange}\n            />\n            <TemperatureInput\n                scale=\"f\"\n                temperature={fahrenheit}\n                onTemperatureChange={handleFahrenheitChange}\n            />\n            <BoilingVerdict celsius={parseFloat(celsius)} />\n        </div>\n    );\n}\n\nexport default Calculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}